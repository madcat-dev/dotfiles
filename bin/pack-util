#!/bin/sh

export BASE=$(realpath `dirname $0`/../)
export PKGS="$BASE/packets"

USAGE="Usage:\n\t$(basename $0) install|info pkg1[, pkg2, ...]"
mkdir -p $BASE/var > /dev/null 2>&1


CMD=()

for cmd in ${@}; do 
    case $cmd in 
    install)
        INSTALL=true
        ;;

    info)
        ;;

    faq)
        FAQ=true
        export PKGS="$BASE/faq"
        ;;

    --force)
        FORCE="--force"
        ;;

    --fake)
        FAKE="--fake"
        ;;

    *)
        CMD+=( $cmd )
        ;;
    esac
done

[[ ! $CMD ]] && \
    echo -e "Usage:\n\t$(basename $0) install|info [--force, --fake] pkg1[, pkg2, ...]" && \
    echo -e "\t$(basename $0) faq packet" && \
    echo -e "" && \
    CMD='/'


for item in ${CMD[@]}; do
    [[ -d $PKGS/$item ]] && \
        echo -e "Packet from '$item':\n\t\033[36m"`ls -p $PKGS/$item`"\033[0m\n" && \
        continue

    if [[ ! -e $PKGS/$item ]]; then
        echo -e "\033[31m***"
        echo -e "*** Error: packet '$item' not found! ***"
        echo -e "***\033[0m"

        [[ ! ${INSTALL} ]] && continue
        exit 1
    fi

    # init default package variables and methods
    TITLE=""
    DESCRIPTION=""
    DEPENDENCIES=()
    PACKAGES=()
    CONFIGS=()
    pre_install() { echo -e "\033[33m  - skip\033[0m"; }
    pre_config()  { echo -e "\033[33m  - skip\033[0m"; }
    install()     { echo -e "\033[33m  - skip\033[0m"; }

    to_install=() # list of packages to be installed 

    # Load packet
    source $PKGS/$item

    echo -e "\033[33m$(perl -E 'say "-" x 60')\033[0m"
    echo -e "\033[33m-- Packet $item - ${TITLE:-...}\033[0m"

    # Check installed packet
    if [[ -e $BASE/var/$item ]]; then
        echo -e "\033[34m-- Packet '$item' already installed\033[0m"

        if [[ ${INSTALL} ]]; then
            [[ ! ${FORCE} ]] && \
                continue
            echo -e "\033[33m-- Force installation!\033[0m"
        fi
    fi

    echo -e "\033[33m$(perl -E 'say "-" x 60')\033[0m"

    [[ ${DESCRIPTION} ]] && \
        echo -e "${DESCRIPTION}"

    [[ ${FAQ} ]] && exit 0

    # Resolve dependencies
    if [[ $DEPENDENCIES ]]; then
        echo -e "Dependencies:"
        echo -e "\t\033[36m${DEPENDENCIES[*]}\033[0m"

        for dep in ${DEPENDENCIES[@]}; do
            [[ -e $BASE/var/$dep ]] && \
                echo -e "\t- packet '$dep' already installed" && \
                continue
             
            [[ ! -e $PKGS/$dep ]] && \
                echo -e "\033[31m\t- Error: packet '$dep' not found!\033[0m" && \
                exit 1

            echo -e "\n\033[34m### \n### Install '$dep' dependence packet\n###\033[0m\n"

            $0 install $dep

            echo -e "\n\033[34m!!! \n!!! Continue installation '$item' packet\n!!!\033[0m\n"
        done
    fi
    
    # Resolve packages to install
    if [[ ${PACKAGES} ]]; then
        echo -e "Packages list:"

        for pkg in ${PACKAGES[@]}; do
            installed=( $(LC_ALL=C pamac info $pkg | egrep '^Install Reason') )
            installed=${installed[@]:3}

            repository=( $(LC_ALL=C pamac info $pkg | egrep '^Repository') )
            repository=${repository[@]:2}

            echo -e "\t$(printf '%-20s' $pkg [${repository}]): \033[33m${installed}\033[0m"

            [[ ! $installed ]] && \
                to_install+=( $pkg )
        done
    fi

    # Information for previous installed packages
    if [[ -e $BASE/var/$item ]]; then
        echo -e "Removed packages:"
        REMOVED=()

        while IFS=\# read -r spkg _; do
            INSTALLED=""

            spkg=$(echo $spkg | sed 's/ *$//g')
            [[ ! $spkg ]] && continue

            for pkg in ${PACKAGES[@]}; do
                [[ $pkg == $spkg ]] && INSTALLED=true && break
            done

            [[ ! ${INSTALLED} ]] && \
                REMOVED+=( $spkg )
        done < $BASE/var/$item

        echo -e "\033[31m\t${REMOVED[@]}\033[0m"
    fi


    [[ ! ${INSTALL} ]] && \
        echo "" && continue

    # exec pre-install handler
    echo -e "Run pre-install script:"
    if [[ ! ${FAKE} ]]; then
        pre_install || exit 1
    fi

    # Install packages
    if [[ ${to_install} ]]; then 
        echo -e "Install packages:\n\t\033[36m${to_install[@]}\033[0m"
        [[ ! ${FAKE} ]] && \
            pamac install ${to_install[@]}
    fi

    # exec pre-config handler
    echo -e "Run pre-configure script:"
    if [[ ! ${FAKE} ]]; then
        pre_config || exit 1
    fi

    # copy configurations
    if [[ ${CONFIGS} ]]; then
        echo -e "Copy config files:"

        for cfg in ${CONFIGS[@]}; do
            $BASE/bin/syncopy "$BASE/configs/$cfg" "$HOME/$cfg" ${FAKE}
        done
    fi

    # exec post-install handler
    echo -e "Run post-install script:"
    if [[ ! ${FAKE} ]]; then
        install || exit 1
    fi

    # Mark installed packet
    mkdir -p $(dirname $BASE/var/$item) > /dev/null 2>&1
    rm -f $BASE/var/$item
    touch $BASE/var/$item

    for pkg in ${PACKAGES[@]}; do
        # Store installed packages
        echo "${pkg}" >> $BASE/var/$item
    done

    echo -e "\033[32m[+] install '$item' is complete\033[0m\n"
done
