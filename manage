#!/bin/sh

STORAGE="./dots"


install() {
    LIST=${2}

    if [ ! "${LIST}" ]; then
        echo -e "Not packages in ${1} list"
        return 1
    fi

    echo -e "\033[32m-- Install ${1} packages --\033[0m"
    echo -e "Packages:\n\t${LIST}"

    pamac install ${LIST}
}


case $1 in
install)
    source inc/packages

    case $2 in
    dev)
        echo -e "\033[32m-- Install Base-devel packages --\033[0m"
        sudo pacman -S base-devel
        install "Devel" "${DEVEL[*]}"
        ;;

    base)
        LIST="${DEPS[*]} ${FONTS[*]} ${THEMES[*]} ${UTILS[*]} ${MEDIA[*]} ${WM[*]}"
        install "Base" "${LIST}"
        ;;

    swap)
        echo -e "\033[32m-- Install Systemd SWAP packages --\033[0m"
        sudo pacman -S systemd-swap

        sudo mkdir -p /etc/systemd/swap.conf.d/
        sudo bash -c 'echo -e "zswap_enabled=0\nzram_enabled=1\nswapfc_enabled=1" > /etc/systemd/swap.conf.d/myswap.conf'

        sudo systemctl enable systemd-swap && sudo systemctl restart systemd-swap
        systemctl status systemd-swap
        ;;

    freetype)
        echo -e "\033[32m-- Copy freetype config --\033[0m"
        sudo cp ./etc/profile.d/freetype2.sh /etc/profile.d
        ;;

    vim)
        echo -e "\033[32m-- Install vim environment --\033[0m"
        mkdir -p $HOME/.vim/bundle/
        cp -f ./dots/.vimrc $HOME/

        if [ ! -d $HOME/.vim/bundle/Vundle.vim ]; then
            git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
        fi

        vim -c VundleUpdate -c qa
        ;;

    *)
        echo -e "Usage: manage install {dev|base|swap|freetype|vim}"
        ;;

    esac
    ;;

remove)
    source inc/rmpackages
    echo -e "\033[33m-- Remove packages from list --\033[0m"

    if [ ! ${PURGE_PKGS[*]} ]; then
        echo -e "Not packages in remove list"
        exit 0
    fi

    echo -e "To remove:\n    ${PURGE_PKGS[*]}"
    pamac remove ${PURGE_PKGS[*]}
    ;;

status)
    $0 backup all simular
    exit 0
    ;;

backup)
    source inc/configs
    echo -e "-- Copy configs to ${STORAGE} repository --"

    LIST="${MAIN[*]}"

    if [[ $2 = "all" ]]; then
        LIST="${MAIN[*]} ${EXTRA[*]}"
    fi

    for item in ${LIST}
    do
        ./inc/rcopy.sh "${HOME}/${item}" "${STORAGE}/${item}" ${3}
    done
    ;;

restore)
    source inc/configs
    echo -e "-- Copy configs from '${STORAGE}' repository --"

    LIST="${MAIN[*]}"

    if [[ $2 = "all" ]]; then
        LIST="${MAIN[*]} ${EXTRA[*]}"
    fi

    for item in ${LIST}
    do
        ./inc/rcopy.sh "${STORAGE}/${item}" "${HOME}/${item}"
    done
    ;;

clean)
    echo -e "\033[31m-- Clean ${STORAGE} directory --\033[0m"
    rm -rf ${STORAGE}
    ;;

*)
    echo -e "Usage: manage {install|remove|status|backup|restore|clean}"
    echo -e "       manage install {dev|base|swap|freetype|vim}"
    echo -e "       manage {backup|restore} [all]"
    ;;
esac


exit 0
