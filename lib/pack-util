#!/bin/sh

export BASE=$(realpath `dirname $0`/../)
export PKGS="$BASE/packets"

USAGE="Usage:\n\t$(basename $0) install|info pkg1[, pkg2, ...]"


CMD=( ${@:2} )
[[ ! $CMD ]] && \
    CMD='/'

case $1 in
install)
    INSTALL=true
    ;;
info)
    ;;
*)
    echo -e "Usage:\n\t$(basename $0) install|info pkg1[, pkg2, ...]" && \
        exit 0
    ;;
esac

for item in ${CMD[@]}; do
    [[ -d $PKGS/$item ]] && \
        echo -e "Packet from '$item':\n\t\033[36m"`ls -p $PKGS/$item`"\033[0m\n" && \
        continue

    if [[ ! -e $PKGS/$item ]]; then
        echo -e "\033[31m***"
        echo -e "*** Error: packet '$item' not found! ***"
        echo -e "***\033[0m"

        [[ ! $INSTALL ]] && continue
        exit 1
    fi

    # init default package variables and methods
    TITLE=""
    DESCRIPTION=""
    PACKAGES=()
    CONFIGS=()
    pre_install() { echo -e "\033[33m\t- skip\033[0m"; }
    pre_config()  { echo -e "\033[33m\t- skip\033[0m"; }
    install()     { echo -e "\033[33m\t- skip\033[0m"; }
    to_install=()

    source $PKGS/$item

    echo -e "\033[33m$(perl -E 'say "-" x 60')\033[0m"
    echo -e "\033[33m-- Packet $item - ${TITLE:-...}\033[0m"
    echo -e "\033[33m$(perl -E 'say "-" x 60')\033[0m"

    [[ ${DESCRIPTION} ]] && \
        echo -e "${DESCRIPTION}"
    
    [[ ${PACKAGES} ]] && \
        echo -e "Packages list:"

    for pkg in ${PACKAGES[@]}; do
        installed=( $(LC_ALL=C pamac info $pkg | grep "Install Reason") )
        echo -e "\t$(printf '%-20s' $pkg): \033[33m${installed[@]:3}\033[0m"

        [[ ! $installed ]] && \
            to_install+=( $pkg )
    done

    [[ ! $INSTALL ]] && \
        echo "" && continue

    # exec pre-install handler
    echo -e "Run pre-install script:" && \
        pre_install || exit 1

    if [[ ${to_install} ]]; then 
        echo -e "Install packages:\n\t\033[36m${to_install[@]}\033[0m"
        #pamac install ${to_install[@]}
    fi

    # exec pre-config handler
    echo -e "Run pre-configure script:" && \
        pre_config || exit 1

    if [[ ${CONFIGS} ]]; then
        echo -e "Copy config files:"

        for item in ${CONFIGS[@]}; do
            $BASE/lib/syncopy "$BASE/backup/$item" "$HOME/$item" simular
        done
    fi

    # exec post-install handler
    echo -e "Run post-install script:" && \
        install || exit 1

    echo -e "\033[32m[+] install '$item' is complete\033[0m\n"
done
